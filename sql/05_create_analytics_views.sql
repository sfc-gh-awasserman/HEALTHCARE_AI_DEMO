-- Analytics Views for Healthcare Demo
-- Create unified views that combine AthenaHealth and McKesson data for analysis

USE SCHEMA AHF_HEALTHCARE_DEMO.ANALYTICS;

-- Unified patient view combining EHR and pharmacy data
CREATE OR REPLACE VIEW PATIENT_UNIFIED AS
SELECT 
    p.PATIENT_ID,
    p.FIRST_NAME,
    p.LAST_NAME,
    p.DATE_OF_BIRTH,
    p.GENDER,
    p.PHONE,
    p.EMAIL,
    p.CITY,
    p.STATE,
    p.PRIMARY_CARE_PROVIDER,
    -- Latest encounter information
    le.LATEST_ENCOUNTER_DATE,
    le.LATEST_ENCOUNTER_TYPE,
    le.LATEST_PROVIDER,
    -- Next appointment information
    na.NEXT_APPOINTMENT_DATE,
    na.NEXT_APPOINTMENT_TYPE,
    -- Prescription summary
    ps.TOTAL_PRESCRIPTIONS,
    ps.UNPICKED_PRESCRIPTIONS,
    ps.LATEST_PRESCRIPTION_DATE
FROM AHF_HEALTHCARE_DEMO.ATHENA_EHR.PATIENTS p
LEFT JOIN (
    SELECT 
        PATIENT_ID,
        LATEST_ENCOUNTER_DATE,
        LATEST_ENCOUNTER_TYPE,
        LATEST_PROVIDER
    FROM (
        SELECT 
            PATIENT_ID,
            ENCOUNTER_DATE AS LATEST_ENCOUNTER_DATE,
            ENCOUNTER_TYPE AS LATEST_ENCOUNTER_TYPE,
            PROVIDER_NAME AS LATEST_PROVIDER,
            ROW_NUMBER() OVER (PARTITION BY PATIENT_ID ORDER BY ENCOUNTER_DATE DESC) AS rn
        FROM AHF_HEALTHCARE_DEMO.ATHENA_EHR.ENCOUNTERS
    ) 
    WHERE rn = 1
) le ON p.PATIENT_ID = le.PATIENT_ID
LEFT JOIN (
    SELECT 
        PATIENT_ID,
        NEXT_APPOINTMENT_DATE,
        NEXT_APPOINTMENT_TYPE
    FROM (
        SELECT 
            PATIENT_ID,
            APPOINTMENT_DATE AS NEXT_APPOINTMENT_DATE,
            APPOINTMENT_TYPE AS NEXT_APPOINTMENT_TYPE,
            ROW_NUMBER() OVER (PARTITION BY PATIENT_ID ORDER BY APPOINTMENT_DATE ASC) AS rn
        FROM AHF_HEALTHCARE_DEMO.ATHENA_EHR.APPOINTMENTS
        WHERE APPOINTMENT_DATE >= CURRENT_DATE() AND STATUS = 'Scheduled'
    )
    WHERE rn = 1
) na ON p.PATIENT_ID = na.PATIENT_ID
LEFT JOIN (
    SELECT 
        PATIENT_ID,
        COUNT(*) AS TOTAL_PRESCRIPTIONS,
        SUM(CASE WHEN PICKUP_STATUS = 'Not Picked Up' THEN 1 ELSE 0 END) AS UNPICKED_PRESCRIPTIONS,
        MAX(PRESCRIBED_DATE) AS LATEST_PRESCRIPTION_DATE
    FROM AHF_HEALTHCARE_DEMO.MCKESSON_PHARMACY.PRESCRIPTIONS
    GROUP BY PATIENT_ID
) ps ON p.PATIENT_ID = ps.PATIENT_ID;

-- Daily encounter metrics view
CREATE OR REPLACE VIEW DAILY_ENCOUNTER_METRICS AS
SELECT 
    ENCOUNTER_DATE,
    COUNT(*) AS TOTAL_ENCOUNTERS,
    COUNT(DISTINCT PATIENT_ID) AS UNIQUE_PATIENTS,
    COUNT(DISTINCT PROVIDER_NAME) AS PROVIDERS_ACTIVE,
    AVG(VISIT_DURATION_MINUTES) AS AVG_VISIT_DURATION,
    SUM(CASE WHEN FOLLOW_UP_NEEDED = TRUE THEN 1 ELSE 0 END) AS ENCOUNTERS_NEEDING_FOLLOWUP
FROM AHF_HEALTHCARE_DEMO.ATHENA_EHR.ENCOUNTERS
GROUP BY ENCOUNTER_DATE
ORDER BY ENCOUNTER_DATE DESC;

-- Prescription adherence analysis view
CREATE OR REPLACE VIEW PRESCRIPTION_ADHERENCE AS
SELECT 
    p.PATIENT_ID,
    p.FIRST_NAME,
    p.LAST_NAME,
    pr.PRESCRIPTION_ID,
    pr.MEDICATION_NAME,
    pr.PRESCRIBED_DATE,
    pr.FILLED_DATE,
    pr.PICKUP_DATE,
    pr.PICKUP_STATUS,
    pr.DAYS_SUPPLY,
    DATEDIFF('day', pr.PRESCRIBED_DATE, COALESCE(pr.PICKUP_DATE, CURRENT_DATE())) AS DAYS_TO_PICKUP,
    CASE 
        WHEN pr.PICKUP_STATUS = 'Not Picked Up' AND DATEDIFF('day', pr.PRESCRIBED_DATE, CURRENT_DATE()) > 7 
        THEN 'Overdue'
        WHEN pr.PICKUP_STATUS = 'Not Picked Up' 
        THEN 'Pending'
        ELSE 'Compliant'
    END AS ADHERENCE_STATUS
FROM AHF_HEALTHCARE_DEMO.ATHENA_EHR.PATIENTS p
INNER JOIN AHF_HEALTHCARE_DEMO.MCKESSON_PHARMACY.PRESCRIPTIONS pr ON p.PATIENT_ID = pr.PATIENT_ID;

-- At-risk patients view (haven't picked up prescriptions and no upcoming appointments)
CREATE OR REPLACE VIEW AT_RISK_PATIENTS AS
SELECT 
    pu.PATIENT_ID,
    pu.FIRST_NAME,
    pu.LAST_NAME,
    pu.PHONE,
    pu.EMAIL,
    pu.PRIMARY_CARE_PROVIDER,
    pu.UNPICKED_PRESCRIPTIONS,
    pu.LATEST_PRESCRIPTION_DATE,
    pu.LATEST_ENCOUNTER_DATE,
    pu.NEXT_APPOINTMENT_DATE,
    -- Get recent clinical notes for context
    STRING_AGG(e.CLINICAL_NOTES, ' | ') AS RECENT_CLINICAL_NOTES
FROM PATIENT_UNIFIED pu
LEFT JOIN AHF_HEALTHCARE_DEMO.ATHENA_EHR.ENCOUNTERS e ON pu.PATIENT_ID = e.PATIENT_ID
WHERE pu.UNPICKED_PRESCRIPTIONS > 0
  AND (pu.NEXT_APPOINTMENT_DATE IS NULL OR pu.NEXT_APPOINTMENT_DATE > DATEADD('month', 1, CURRENT_DATE()))
  AND pu.LATEST_PRESCRIPTION_DATE >= DATEADD('month', -2, CURRENT_DATE())
  AND (e.ENCOUNTER_DATE IS NULL OR e.ENCOUNTER_DATE >= DATEADD('month', -3, CURRENT_DATE()))
GROUP BY 
    pu.PATIENT_ID, pu.FIRST_NAME, pu.LAST_NAME, pu.PHONE, pu.EMAIL, 
    pu.PRIMARY_CARE_PROVIDER, pu.UNPICKED_PRESCRIPTIONS, pu.LATEST_PRESCRIPTION_DATE,
    pu.LATEST_ENCOUNTER_DATE, pu.NEXT_APPOINTMENT_DATE;

-- Provider performance metrics
CREATE OR REPLACE VIEW PROVIDER_METRICS AS
SELECT 
    PROVIDER_NAME,
    COUNT(DISTINCT PATIENT_ID) AS UNIQUE_PATIENTS_SEEN,
    COUNT(*) AS TOTAL_ENCOUNTERS,
    AVG(VISIT_DURATION_MINUTES) AS AVG_VISIT_DURATION,
    SUM(CASE WHEN FOLLOW_UP_NEEDED = TRUE THEN 1 ELSE 0 END) AS FOLLOWUPS_SCHEDULED,
    COUNT(DISTINCT ENCOUNTER_DATE) AS DAYS_ACTIVE
FROM AHF_HEALTHCARE_DEMO.ATHENA_EHR.ENCOUNTERS
WHERE ENCOUNTER_DATE >= DATEADD('month', -3, CURRENT_DATE())
GROUP BY PROVIDER_NAME
ORDER BY TOTAL_ENCOUNTERS DESC;

COMMENT = 'Analytics views created for unified healthcare data analysis';
